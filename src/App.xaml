<Application x:Class="RSA_WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RSA_WPF"
             xmlns:properties="clr-namespace:RSA_WPF.Properties"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/DarkTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!--#region Text styles-->
            <Style x:Key="TitleText" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="Museo Sans 700"/>
            </Style>

            <Style x:Key="MainText" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontFamily" Value="Segoe UI Bold"/>
            </Style>

            <Style x:Key="NormalText" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource MainColorLight}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
            </Style>

            <Style x:Key="MainText2" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
            </Style>

            <Style x:Key="SettingsMainText" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Style x:Key="SettingsText" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource SettingsTextForeground}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontWeight" Value="Regular"/>
            </Style>
            <!--#endregion-->

            <!--#region Buttons styles-->
            <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            CornerRadius="8"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOver}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonPressed}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Control button-->
            <Style x:Key="ControlButton" TargetType="{x:Type Button}">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlButtonMouseOver}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlButtonPressed}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Copy button-->
            <Style x:Key="FunctionButton" TargetType="{x:Type Button}">
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                <Setter Property="Width" Value="22"/>
                <Setter Property="Height" Value="22"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            CornerRadius="6"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOver}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonPressed}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExternalButton" TargetType="{x:Type Button}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            CornerRadius="25"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--#region ComboBox-->
            <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border"
                        BorderBrush="{DynamicResource MainColor}" 
                        CornerRadius="3"
                        BorderThickness="2" 
                        Background="Transparent"/>
                    <Border
                        Grid.Column="1"
                        Margin="1"
                        Name="ButtonBorder"
                        CornerRadius="3"
                        BorderThickness="0" 
                        Background="Transparent"/>

                    <Path
                        Name="Arrow"
                        Grid.Column="1" 
                        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                        HorizontalAlignment="Center"
                        Fill="{DynamicResource MainColorLight}"
                        VerticalAlignment="Center"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                        <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource ComboboxMouseOver}"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                        <Setter Property="Border.BorderBrush" TargetName="Border" Value="{DynamicResource ComboboxPressed}"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="Transparent"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                        <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                        <Setter Property="TextElement.Foreground" Value="Transparent"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="Transparent"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource Foreground}"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton
                                    Name="ToggleButton"
                                    Grid.Column="2"
                                    ClickMode="Press"
                                    Focusable="False"
                                    IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                                <ContentPresenter
                                    Name="ContentSite"
                                    Margin="13,3,23,3"
                                    IsHitTestVisible="False"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                    ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox
                                    Name="PART_EditableTextBox"
                                    FontWeight="Regular"
                                    Margin="3,3,23,3"                     
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    Visibility="Hidden"
                                    Background="Transparent"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Focusable="True">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox">
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup
                                    Name="Popup"
                                    Placement="Bottom"
                                    Focusable="False"
                                    AllowsTransparency="True"
                                    IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                    PopupAnimation="Slide">
                                    <Grid
                                        Name="DropDown"
                                        SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border
                                            Name="DropDownBorder"
                                            Background="{DynamicResource Background2}"
                                            Margin="0,5,0,0"
                                            CornerRadius="3"
                                            BorderThickness="2"
                                            BorderBrush="{DynamicResource MainColor}"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource MainColor}"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ComboBoxItem">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border
                                x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                CornerRadius="3"
                                Background="{TemplateBinding Background}"
                                Padding="10,6,10,6"
                                Margin="0,5,0,0"
                                SnapsToDevicePixels="True">
                                <ContentPresenter
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboboxItemMouseOver}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--#region TextBox-->
            <Style TargetType="TextBox" x:Key="TextBoxEditable">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource MainColorLight}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Foreground}"/>
                <Setter Property="ContextMenu" Value="{x:Null}"/>
                <Setter Property="Cursor" Value="IBeam"/>
                <Setter Property="IsReadOnly" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushFocus}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushFocus}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBox" x:Key="TextBoxReadOnly">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource MainColorLight}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="SelectionBrush" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MainColor}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Foreground}"/>
                <Setter Property="ContextMenu" Value="{x:Null}"/>
                <Setter Property="Cursor" Value="Arrow"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            </Style>
            <!--#endregion-->

            <!--#region ToggleButton-->
            <Style TargetType="{x:Type local:Toggle}">
                <Setter Property="Width" Value="45"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:Toggle}">
                            <Border x:Name="bk" Background="{DynamicResource ToggleBackgroundOff}" CornerRadius="12">
                                <Ellipse x:Name="Slider" Fill="White" HorizontalAlignment="Left" Margin="3" Width="18"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="bk" Property="Background" Value="{DynamicResource ToggleBackgroundOn}"/>
                                </Trigger>

                                <EventTrigger RoutedEvent="Loaded">
                                    <SkipStoryboardToFill BeginStoryboardName="Checked"/>
                                    <SkipStoryboardToFill BeginStoryboardName="Unchecked"/>
                                </EventTrigger>
                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="Checked">
                                            <Storyboard>
                                                <ThicknessAnimationUsingKeyFrames
                                                Storyboard.TargetName="Slider"
                                                Storyboard.TargetProperty="Margin"
                                                BeginTime="00:00:00"
                                                SpeedRatio="8">
                                                    <SplineThicknessKeyFrame KeyTime="00:00:00:01" Value="24,3,3,3"/>
                                                </ThicknessAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard x:Name="Unchecked">
                                            <Storyboard>
                                                <ThicknessAnimationUsingKeyFrames
                                                Storyboard.TargetName="Slider"
                                                Storyboard.TargetProperty="Margin"
                                                BeginTime="00:00:00"
                                                SpeedRatio="8">
                                                    <SplineThicknessKeyFrame KeyTime="00:00:00:01" Value="3"/>
                                                </ThicknessAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--Menu buttons-->
            <PathGeometry x:Key="Lock" Figures="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z" FillRule="NonZero"/>
            <PathGeometry x:Key="Visibility" Figures="M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z" FillRule="NonZero"/>
            <PathGeometry x:Key="Code" Figures="M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z" FillRule="NonZero"/>
            <PathGeometry x:Key="Settings" Figures="M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z" FillRule="NonZero"/>

            <!--Control buttons-->
            <PathGeometry x:Key="Minimize" Figures="m 6 11 h 12 v 2 H 6 Z" FillRule="NonZero"/>
            <PathGeometry x:Key="Close" Figures="M 19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 Z" FillRule="NonZero"/>

            <!--Function buttons-->
            <PathGeometry x:Key="Copy" Figures="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" FillRule="NonZero"/>
            <PathGeometry x:Key="Paste" Figures="M19 2h-4.18C14.4.84 13.3 0 12 0S9.6.84 9.18 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z" FillRule="NonZero"/>
            <PathGeometry x:Key="Clear" Figures="M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z" FillRule="NonZero"/>
            
            <!--Settings buttons-->
            <PathGeometry x:Key="Monitor" Figures="M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z" FillRule="NonZero"/>
            <PathGeometry x:Key="Support" Figures="M12 2C6.48 2 2 6.48 2 12c0 5.52 4.48 10 10 10s10-4.48 10-10C22 6.48 17.52 2 12 2z M19.46 9.12l-2.78 1.15 c-0.51-1.36-1.58-2.44-2.95-2.94l1.15-2.78C16.98 5.35 18.65 7.02 19.46 9.12z M12 15c-1.66 0-3-1.34-3-3s1.34-3 3-3s3 1.34 3 3 S13.66 15 12 15z M9.13 4.54l1.17 2.78c-1.38 0.5-2.47 1.59-2.98 2.97L4.54 9.13C5.35 7.02 7.02 5.35 9.13 4.54z M4.54 14.87 l2.78-1.15c0.51 1.38 1.59 2.46 2.97 2.96l-1.17 2.78C7.02 18.65 5.35 16.98 4.54 14.87z M14.88 19.46l-1.15-2.78 c1.37-0.51 2.45-1.59 2.95-2.97l2.78 1.17C18.65 16.98 16.98 18.65 14.88 19.46z" FillRule="NonZero"/>
            <PathGeometry x:Key="ExternalLink" Figures="M18 10.82a1 1 0 0 0-1 1V19a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8A1 1 0 0 1 5 7h7.18a1 1 0 0 0 0-2H5A3 3 0 0 0 2 8V19a3 3 0 0 0 3 3H16a3 3 0 0 0 3-3V11.82A1 1 0 0 0 18 10.82Zm3.92-8.2a1 1 0 0 0-.54-.54A1 1 0 0 0 21 2H15a1 1 0 0 0 0 2h3.59L8.29 14.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L20 5.41V9a1 1 0 0 0 2 0V3A1 1 0 0 0 21.92 2.62Z" FillRule="NonZero"/>
            <PathGeometry x:Key="Info" Figures="M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" FillRule="NonZero"/>
            <PathGeometry x:Key="UpToDate" Figures="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" FillRule="NonZero"/>
            <PathGeometry x:Key="NeedUpdate" Figures="M12 20c-4.41 0-8-3.59-8-8s3.59-8 8-8s8 3.59 8 8S16.41 20 12 20 M12 22c5.52 0 10-4.48 10-10c0-5.52-4.48-10-10-10 C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22L12 22z M11 12l0 3c0 0.55 0.45 1 1 1h0c0.55 0 1-0.45 1-1l0-3h1.79 c0.45 0 0.67-0.54 0.35-0.85l-2.79-2.79c-0.2-0.2-0.51-0.2-0.71 0l-2.79 2.79C8.54 11.46 8.76 12 9.21 12H11z" FillRule="NonZero"/>
            <PathGeometry x:Key="NeedDowngrade" Figures="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8s-8-3.59-8-8S7.59 4 12 4 M12 2C6.48 2 2 6.48 2 12c0 5.52 4.48 10 10 10 c5.52 0 10-4.48 10-10C22 6.48 17.52 2 12 2L12 2z M13 12l0-3c0-0.55-0.45-1-1-1h0c-0.55 0-1 0.45-1 1l0 3H9.21 c-0.45 0-0.67 0.54-0.35 0.85l2.79 2.79c0.2 0.2 0.51 0.2 0.71 0l2.79-2.79c0.31-0.31 0.09-0.85-0.35-0.85H13z" FillRule="NonZero"/>


        </ResourceDictionary>
    </Application.Resources>
</Application>
